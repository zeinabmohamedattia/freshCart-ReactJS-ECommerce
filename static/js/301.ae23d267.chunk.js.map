{"version":3,"file":"static/js/301.ae23d267.chunk.js","mappings":"wRASe,SAASA,IAAiB,IAADC,EACtCC,GAAgCC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAvCI,EAAQF,EAAA,GAAEG,EAAWH,EAAA,GAE5BI,GAAoCC,EAAAA,EAAAA,YAAWC,EAAAA,GAAzCC,EAAYH,EAAZG,aAAcC,EAAWJ,EAAXI,YAChBC,GAAWC,EAAAA,EAAAA,MACfC,GAA8BZ,EAAAA,EAAAA,WAAS,GAAMa,GAAAX,EAAAA,EAAAA,GAAAU,EAAA,GAAtCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAEtBG,EAAmBC,EAAAA,GAAW,CAChCC,MAAOD,EAAAA,KAAaE,SAAS,qBAAqBD,MAAM,iBACxDE,YAAaH,EAAAA,KAAaE,SAAS,wBAAwBE,QAAQ,qBAAsB,sCAmB3F,IAAIC,GAASC,EAAAA,EAAAA,IAAU,CACrBC,cAAe,CACb,MAAS,GACT,YAAe,IACdR,iBAAAA,EACDS,SAvBF,SAC2BC,GAAA,OAAA5B,EAAAA,IAAA6B,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAA7B,SAAAC,EAA8BC,GAAM,IAAAC,EAAAC,EAAA,OAAAL,EAAAA,EAAAA,KAAAM,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAClB,OAAhBtB,GAAW,GAAKoB,EAAAE,KAAA,EACKC,EAAAA,EAAMC,IAAI,4DAA6DR,GACzFS,OAAM,SAAAC,GACLrC,EAAYqC,EAAIC,SAAST,KAAKU,SAC9B5B,GAAW,EACb,IAAE,OAAAiB,EAAAG,EAAAS,KAJEX,EAAID,EAAJC,KAMNlB,GAAW,GACX8B,aAAaC,QAAQ,YAAab,EAAKc,OAEvCvC,EAAayB,EAAKc,OAClBtC,EAAYwB,EAAKe,MACjBC,QAAQC,IAAIjB,EAAKe,MACjBtC,EAAS,UAAS,yBAAAyB,EAAAgB,OAAA,GAAArB,EAAA,MACnBsB,MAAA,KAAAC,UAAA,IAUD,OAAOC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACLF,EAAAA,EAAAA,MAACG,EAAAA,EAAM,CAAAD,SAAA,EACLE,EAAAA,EAAAA,KAAA,QAAMC,QAAQ,WACdD,EAAAA,EAAAA,KAAA,SAAAF,SAAO,uBAETE,EAAAA,EAAAA,KAAA,MAAIE,UAAU,OAAMJ,SAAE,iCACtBF,EAAAA,EAAAA,MAAA,QAAM7B,SAAUH,EAAOuC,aAAaL,SAAA,CACjCrD,GAAWuD,EAAAA,EAAAA,KAAA,OAAKE,UAAU,sCAAqCJ,SAAErD,IAAkB,IAEpFmD,EAAAA,EAAAA,MAAA,OAAKM,UAAU,qBAAoBJ,SAAA,EACjCF,EAAAA,EAAAA,MAAA,OAAKM,UAAU,qBAAoBJ,SAAA,EACjCE,EAAAA,EAAAA,KAAA,SAAOI,KAAK,QAAQC,GAAG,QAAQC,SAAU1C,EAAO2C,aAAcC,OAAQ5C,EAAO6C,WAAYC,KAAK,QAAQR,UAAU,wBAChHF,EAAAA,EAAAA,KAAA,SAAOW,QAAQ,QAAOb,SAAC,WACtBlC,EAAOgD,OAAOpD,OAASI,EAAOiD,QAAQrD,OAAQwC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,0BAAyBJ,SAAElC,EAAOgD,OAAOpD,QAAe,SAGxHoC,EAAAA,EAAAA,MAAA,OAAKM,UAAU,qBAAoBJ,SAAA,EACjCE,EAAAA,EAAAA,KAAA,SAAOI,KAAK,WAAWC,GAAG,cAAcG,OAAQ5C,EAAO6C,WAAYH,SAAU1C,EAAO2C,aAAcG,KAAK,cAAcR,UAAU,gCAC/HF,EAAAA,EAAAA,KAAA,SAAOW,QAAQ,cAAab,SAAC,kBAC5BlC,EAAOgD,OAAOlD,aAAeE,EAAOiD,QAAQnD,aAAcsC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,0BAAyBJ,SAAElC,EAAOgD,OAAOlD,cAAqB,WAI3IN,GAAU4C,EAAAA,EAAAA,KAAA,UAAQI,KAAK,SAASU,UAAQ,EAACZ,UAAU,yBAAwBJ,UAC1EE,EAAAA,EAAAA,KAACe,EAAAA,GAAY,CACXC,MAAM,OACNC,MAAM,KACNC,SAAS,EACTC,UAAU,+BAGVnB,EAAAA,EAAAA,KAAA,UAAQc,WAAYlD,EAAOwD,SAAWxD,EAAOyD,OAAQjB,KAAK,SAASF,UAAU,mCAAkCJ,SAAC,eAK1H,C","sources":["Components/ResetPassword/ResetPassword.jsx"],"sourcesContent":["import axios from 'axios';\nimport { useFormik } from 'formik';\nimport React, { useContext, useState } from 'react';\nimport { FallingLines } from 'react-loader-spinner';\nimport { useNavigate } from 'react-router-dom';\nimport { UserContext } from '../../Context/UserContext.js';\nimport * as Yup from 'yup'\nimport { Helmet } from 'react-helmet';\n\nexport default function ResetPassword() {\n  const [apiError, setApiError] = useState(null)\n\n  let { setUserToken, setUserData } = useContext(UserContext)\n  let navigate = useNavigate()\n  const [loading, setLoading] = useState(false)\n\n  let validationSchema = Yup.object({\n    email: Yup.string().required('email is required').email('invalid email'),\n    newPassword: Yup.string().required(\"password is required\").matches(/^[A-Z][\\w\\W]{5,8}$/, 'invalid password ex:(Zeianb@123)'),\n  })\n  async function submitPassword(values) {\n    setLoading(true)\n    let { data } = await axios.put(`https://ecommerce.routemisr.com/api/v1/auth/resetPassword`, values)\n      .catch(err => {\n        setApiError(err.response.data.message)\n        setLoading(false)\n      })\n\n    setLoading(false)\n    localStorage.setItem('userToken', data.token)\n\n    setUserToken(data.token)\n    setUserData(data.user)\n    console.log(data.user)\n    navigate('/login')\n  }\n\n  let formik = useFormik({\n    initialValues: {\n      \"email\": \"\",\n      \"newPassword\": \"\"\n    }, validationSchema\n    , onSubmit: submitPassword\n  })\n\n  return <>\n    <Helmet>\n      <meta charSet=\"utf-8\" />\n      <title>Reset Password</title>\n    </Helmet>\n    <h2 className='my-4' >Reset Your account password</h2>\n    <form onSubmit={formik.handleSubmit}  >\n      {apiError ? <div className='alert alert-danger text-center py-2'>{apiError}</div> : ''}\n\n      <div className=\"form-floating mb-3\">\n        <div className=\"form-floating mb-3\">\n          <input type=\"email\" id='email' onChange={formik.handleChange} onBlur={formik.handleBlur} name=\"email\" className=\"form-control  mb-2\" />\n          <label htmlFor=\"email\">Email </label>\n          {formik.errors.email && formik.touched.email ? <div className='alert alert-danger py-2'>{formik.errors.email}</div> : null}\n\n        </div>\n        <div className=\"form-floating mb-3\">\n          <input type=\"password\" id='newPassword' onBlur={formik.handleBlur} onChange={formik.handleChange} name=\"newPassword\" className=\"form-control form-floating\" />\n          <label htmlFor=\"newPassword\">New Password </label>\n          {formik.errors.newPassword && formik.touched.newPassword ? <div className='alert alert-danger py-2'>{formik.errors.newPassword}</div> : null}\n\n        </div>\n      </div>\n      {loading ? <button type='button' disabled className='btn bg-main text-light'>\n        <FallingLines\n          color=\"#FFF\"\n          width=\"20\"\n          visible={true}\n          ariaLabel=\"falling-circles-loading\"\n        />\n      </button>\n        : <button disabled={!(formik.isValid && formik.dirty)} type='submit' className='btn bg-main text-light px-4 py-2'>Reset</button>\n      }\n    </form>\n\n  </>\n}\n"],"names":["ResetPassword","_submitPassword","_useState","useState","_useState2","_slicedToArray","apiError","setApiError","_useContext","useContext","UserContext","setUserToken","setUserData","navigate","useNavigate","_useState3","_useState4","loading","setLoading","validationSchema","Yup","email","required","newPassword","matches","formik","useFormik","initialValues","onSubmit","_x","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","_yield$axios$put$catc","data","wrap","_context","prev","next","axios","put","catch","err","response","message","sent","localStorage","setItem","token","user","console","log","stop","apply","arguments","_jsxs","_Fragment","children","Helmet","_jsx","charSet","className","handleSubmit","type","id","onChange","handleChange","onBlur","handleBlur","name","htmlFor","errors","touched","disabled","FallingLines","color","width","visible","ariaLabel","isValid","dirty"],"sourceRoot":""}